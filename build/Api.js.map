{"version":3,"sources":["Api.js"],"names":["Api","express","middleware","routes","use","json","urlencoded","extended","produceRouter","path","router"],"mappings":";;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;IAEqBA,G;;AAMnB;AACA,iBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,wBAAf,CADY,CACuB;AACnC,SAAKC,UAAL;AACA,SAAKC,MAAL;AACD;;AAED;;AAZA;AACA;AACA;;;;;iCAWmB;AACjB,WAAKF,OAAL,CAAaG,GAAb,CAAiB,sBAAO,KAAP,CAAjB;AACA,WAAKH,OAAL,CAAaG,GAAb,CAAiB,qBAAWC,IAAX,EAAjB;AACA,WAAKJ,OAAL,CAAaG,GAAb,CAAiB,qBAAWE,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAjB;AACD;;AAED;;;;6BACe;AACb;AACA,UAAMC,gBAAgB,6BAAtB;;AAEA,WAAKP,OAAL,CAAaG,GAAb,CAAiBI,cAAcC,IAA/B,EAAqCD,cAAcE,MAAnD;AACD;;;;;;kBA1BkBV,G","file":"Api.js","sourcesContent":["// @flow\n\nimport express from 'express';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\n\nimport ProduceRouter from './routers/ProduceRouter';\n\nexport default class Api {\n  // annotate with the express $application type\n  // //we create a field reference for the api.express property and tell flow that it will be an object of type express$application from express.\n  // $FlowFixMe: express libdef issue\n  express: express$Application;\n\n  // create the express instance, attach app-level middleware, attach routers\n  constructor() {\n    this.express = express();          //instantiating express.\n    this.middleware();\n    this.routes();\n  }\n\n  //register middlewares\n  middleware(): void {\n    this.express.use(morgan('dev'));\n    this.express.use(bodyParser.json());\n    this.express.use(bodyParser.urlencoded({extended: false}));\n  }\n\n  // connect resource routers\n  routes(): void {\n    // create an instance of ProduceRouter\n    const produceRouter = new ProduceRouter();\n\n    this.express.use(produceRouter.path, produceRouter.router)\n  }\n}\n"]}